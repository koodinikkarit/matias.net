// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ew_song.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SeppoService {

  /// <summary>Holder for reflection information generated from ew_song.proto</summary>
  public static partial class EwSongReflection {

    #region Descriptor
    /// <summary>File descriptor for ew_song.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EwSongReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ld19zb25nLnByb3RvEgxTZXBwb1NlcnZpY2UaDmV3X3ZlcnNlLnByb3Rv",
            "IqcBCgZFd1NvbmcSCgoCaWQYASABKA0SDQoFdGl0bGUYAiABKAkSDgoGYXV0",
            "aG9yGAMgASgJEhEKCWNvcHlyaWdodBgEIAEoCRIVCg1hZG1pbmlzdHJhdG9y",
            "GAUgASgJEhMKC2Rlc2NyaXB0aW9uGAYgASgJEgwKBHRhZ3MYByABKAkSJQoG",
            "dmVyc2VzGAggAygLMhUuU2VwcG9TZXJ2aWNlLkV3VmVyc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SeppoService.EwVerseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SeppoService.EwSong), global::SeppoService.EwSong.Parser, new[]{ "Id", "Title", "Author", "Copyright", "Administrator", "Description", "Tags", "Verses" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EwSong : pb::IMessage<EwSong> {
    private static readonly pb::MessageParser<EwSong> _parser = new pb::MessageParser<EwSong>(() => new EwSong());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EwSong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SeppoService.EwSongReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EwSong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EwSong(EwSong other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      author_ = other.author_;
      copyright_ = other.copyright_;
      administrator_ = other.administrator_;
      description_ = other.description_;
      tags_ = other.tags_;
      verses_ = other.verses_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EwSong Clone() {
      return new EwSong(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 3;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "copyright" field.</summary>
    public const int CopyrightFieldNumber = 4;
    private string copyright_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Copyright {
      get { return copyright_; }
      set {
        copyright_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "administrator" field.</summary>
    public const int AdministratorFieldNumber = 5;
    private string administrator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Administrator {
      get { return administrator_; }
      set {
        administrator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private string tags_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verses" field.</summary>
    public const int VersesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::SeppoService.EwVerse> _repeated_verses_codec
        = pb::FieldCodec.ForMessage(66, global::SeppoService.EwVerse.Parser);
    private readonly pbc::RepeatedField<global::SeppoService.EwVerse> verses_ = new pbc::RepeatedField<global::SeppoService.EwVerse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SeppoService.EwVerse> Verses {
      get { return verses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EwSong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EwSong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Author != other.Author) return false;
      if (Copyright != other.Copyright) return false;
      if (Administrator != other.Administrator) return false;
      if (Description != other.Description) return false;
      if (Tags != other.Tags) return false;
      if(!verses_.Equals(other.verses_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (Copyright.Length != 0) hash ^= Copyright.GetHashCode();
      if (Administrator.Length != 0) hash ^= Administrator.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      hash ^= verses_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Author);
      }
      if (Copyright.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Copyright);
      }
      if (Administrator.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Administrator);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tags);
      }
      verses_.WriteTo(output, _repeated_verses_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (Copyright.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Copyright);
      }
      if (Administrator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Administrator);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Tags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      size += verses_.CalculateSize(_repeated_verses_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EwSong other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.Copyright.Length != 0) {
        Copyright = other.Copyright;
      }
      if (other.Administrator.Length != 0) {
        Administrator = other.Administrator;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      verses_.Add(other.verses_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Author = input.ReadString();
            break;
          }
          case 34: {
            Copyright = input.ReadString();
            break;
          }
          case 42: {
            Administrator = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            Tags = input.ReadString();
            break;
          }
          case 66: {
            verses_.AddEntriesFrom(input, _repeated_verses_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
